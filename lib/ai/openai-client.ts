import OpenAI from "openai";

// Inicializar cliente OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export interface ChatMessage {
  role: "system" | "user" | "assistant";
  content: string;
}

/**
 * Envia mensagem para o ChatGPT com contexto de neg√≥cios
 */
export async function sendChatMessage(
  messages: ChatMessage[],
  context?: string
): Promise<string> {
  try {
    // Criar mensagem de sistema com contexto
    const systemMessage: ChatMessage = {
      role: "system",
      content: `Voc√™ √© um analista de dados especializado em e-commerce e vendas, trabalhando para a HUDLAB.

Suas responsabilidades:
- Analisar dados de vendas, neg√≥cios (deals), produtos e performance de equipe
- Fornecer insights acion√°veis e recomenda√ß√µes estrat√©gicas
- Responder perguntas sobre m√©tricas, tend√™ncias e performance
- Ser objetivo, claro e usar dados para embasar suas respostas
- Sempre que poss√≠vel, incluir n√∫meros e percentuais nas an√°lises
- Sugerir a√ß√µes pr√°ticas baseadas nos dados

IMPORTANTE - Como Usar os Dados:
1. **M√âTRICAS PR√â-CALCULADAS**: Eu j√° calculei v√°rias m√©tricas para voc√™, incluindo:
   - Ticket m√©dio por par (valor total √∑ total de pares)
   - Total de pares vendidos
   - Receita total
   - Taxa de convers√£o

2. **SEMPRE USE OS VALORES PR√â-CALCULADOS** quando dispon√≠veis. N√ÉO tente recalcular!

3. **Lista Detalhada de Neg√≥cios**: Use apenas quando precisar de:
   - An√°lises espec√≠ficas por neg√≥cio
   - Identificar maiores/menores neg√≥cios
   - Agrupar por vendedor, estado, designer
   - An√°lises de UTM

4. **Seja DIRETO e OBJETIVO**:
   - Responda com os n√∫meros que j√° foram calculados
   - N√£o diga "vou calcular" - os c√°lculos j√° foram feitos
   - Cite os valores exatos fornecidos

Formato de resposta:
- Use markdown para formata√ß√£o
- Seja conciso mas completo
- Use emojis quando apropriado para melhor visualiza√ß√£o
- Destaque insights importantes com **negrito**
- Sempre cite os dados espec√≠ficos que voc√™ usou na an√°lise

${context ? `\n## Dados Dispon√≠veis:\n${context}` : ""}`,
    };

    // Combinar mensagens
    const allMessages = [systemMessage, ...messages];

    // Chamar API do OpenAI
    const completion = await openai.chat.completions.create({
      model: "gpt-4-turbo-preview", // GPT-4 Turbo para an√°lises mais precisas e inteligentes
      messages: allMessages,
      temperature: 0.7,
      max_tokens: 2000, // Aumentado para permitir respostas mais detalhadas
    });

    return (
      completion.choices[0].message.content ||
      "Desculpe, n√£o consegui gerar uma resposta."
    );
  } catch (error: any) {
    console.error("Erro ao chamar OpenAI:", error);

    if (error?.status === 401) {
      throw new Error(
        "Chave da API OpenAI inv√°lida. Verifique a configura√ß√£o."
      );
    }

    if (error?.status === 429) {
      throw new Error(
        "Limite de requisi√ß√µes atingido. Tente novamente em alguns instantes."
      );
    }

    throw new Error("Erro ao processar sua mensagem. Tente novamente.");
  }
}

/**
 * Gera sugest√µes de perguntas baseadas no contexto
 */
export function generateSuggestedQuestions(context: any): string[] {
  const suggestions = [
    "üìä Como est√° a performance de vendas este m√™s?",
    "üéØ Qual vendedor teve melhor desempenho?",
    "üí∞ Qual √© o ticket m√©dio dos neg√≥cios?",
    "üìà A taxa de convers√£o est√° boa?",
    "üèÜ Quais s√£o os produtos mais vendidos?",
  ];

  // Adicionar sugest√µes espec√≠ficas baseadas no contexto
  if (context?.deals?.conversionRate < 30) {
    suggestions.push("‚ö†Ô∏è Por que a taxa de convers√£o est√° baixa?");
  }

  if (context?.goals?.length > 0) {
    suggestions.push("üéØ Como estamos em rela√ß√£o √†s metas?");
  }

  return suggestions;
}
